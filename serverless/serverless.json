{
  "service": "code-pipeline-test",
  "plugins": [
    "serverless-plugin-typescript",
    "acp-aws-amplify-serverless-plugin"
  ],
  "provider": {
    "name": "aws",
    "region": "us-east-2",
    "stage": "${opt:stage, 'dev'}",
    "apiName": "code-pipeline-test-lambda-api-${opt:stage, 'dev'}",
    "websocketsApiName": "code-pipeline-test-websocket-api-${opt:stage, 'dev'}",
    "environment": {
      "ENV": "${opt:stage, 'dev'}",
      "REGION": "${opt:region, self:provider.region}",
      "PROJECTNAME": "code-pipeline-test",
      "USER_POOL_ID": {
        "Ref": "codepipelinetestuserpool"
      }
    },
    "iamRoleStatements": [
      {
        "Effect": "Allow",
        "Action": [
          "cognito-idp:AdminGetUser",
          "cognito-idp:AdminListGroupsForUser",
          "cognito-idp:ListUsersInGroup"
        ],
        "Resource": [
          {
            "Fn::GetAtt": ["codepipelinetestuserpool", "Arn"]
          }
        ]
      },
      {
        "Effect": "Allow",
        "Action": [
          "dynamodb:GetItem",
          "dynamodb:PutItem",
          "dynamodb:DeleteItem",
          "dynamodb:UpdateItem",
          "dynamodb:Query",
          "dynamodb:Scan"
        ],
        "Resource": ["arn:aws:dynamodb:*:*:table/*"]
      }
    ]
  },
  "custom": {
    "currentStage": "${self:provider.stage}",
    "amplify": [
      {
        "filename": "aws-exports.ts",
        "type": "typescript",
        "appClient": "codepipelinetestuserpoolclient",
        "s3bucket": "disabled"
      }
    ]
  },
  "functions": {
    "dynamodbaddressget": {
      "handler": "address/dynamodb-handlers/lambda-handlers/dynamodb-handler-get.handler",
      "events": [
        {
          "http": {
            "method": "GET",
            "path": "address",
            "integration": "AWS_PROXY",
            "authorizer": "aws_iam",
            "cors": {
              "origin": "*",
              "headers": [
                "Content-Type",
                "X-Amz-Date",
                "Authorization",
                "X-Api-Key",
                "X-Amz-Security-Token",
                "X-Amz-User-Agent"
              ],
              "allowCredentials": false
            },
            "request": {}
          }
        }
      ],
      "environment": {
        "INTEGRATIONTYPE": "AWS_PROXY",
        "ENTITYTYPE": "DynamoDB",
        "NOTIFICATIONCONFIG": "{\"isFifo\":true,\"activeChannels\":[],\"categoryConfig\":[{\"title\":\"General\",\"notificationType\":\"OPT-OUT\"}]}",
        "HASHKEY": "userSub",
        "SORTKEY": "updatedAt"
      }
    },
    "dynamodbaddresspost": {
      "handler": "address/dynamodb-handlers/lambda-handlers/dynamodb-handler-post.handler",
      "events": [
        {
          "http": {
            "method": "POST",
            "path": "address",
            "integration": "AWS_PROXY",
            "authorizer": "aws_iam",
            "cors": {
              "origin": "*",
              "headers": [
                "Content-Type",
                "X-Amz-Date",
                "Authorization",
                "X-Api-Key",
                "X-Amz-Security-Token",
                "X-Amz-User-Agent"
              ],
              "allowCredentials": false
            },
            "request": {
              "schema": {
                "application/json": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "additionalProperties": false,
                  "definitions": {
                    "formGeneratorFields": {
                      "enum": [
                        "country",
                        "state",
                        "city",
                        "addressLine1",
                        "addressLine2",
                        "zipCode",
                        "testbool"
                      ]
                    }
                  },
                  "properties": {
                    "userSub": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "integer"
                    },
                    "country": {
                      "type": "string",
                      "description": "Country"
                    },
                    "state": {
                      "type": "string",
                      "description": "State"
                    },
                    "city": {
                      "type": "string",
                      "description": "City"
                    },
                    "addressLine1": {
                      "type": "string",
                      "description": "Address Line 1"
                    },
                    "addressLine2": {
                      "type": "string",
                      "description": "Address Line 2"
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "Zip Code"
                    },
                    "testbool": {
                      "type": "boolean",
                      "description": "Test bool"
                    }
                  },
                  "required": [
                    "country",
                    "state",
                    "city",
                    "addressLine1",
                    "zipCode"
                  ]
                }
              }
            }
          }
        }
      ],
      "environment": {
        "INTEGRATIONTYPE": "AWS_PROXY",
        "ENTITYTYPE": "DynamoDB",
        "NOTIFICATIONCONFIG": "{\"isFifo\":true,\"activeChannels\":[],\"categoryConfig\":[{\"title\":\"General\",\"notificationType\":\"OPT-OUT\"}]}",
        "HASHKEY": "userSub",
        "SORTKEY": "updatedAt"
      }
    },
    "dynamodbaddressput": {
      "handler": "address/dynamodb-handlers/lambda-handlers/dynamodb-handler-put.handler",
      "events": [
        {
          "http": {
            "method": "PUT",
            "path": "address",
            "integration": "AWS_PROXY",
            "authorizer": "aws_iam",
            "cors": {
              "origin": "*",
              "headers": [
                "Content-Type",
                "X-Amz-Date",
                "Authorization",
                "X-Api-Key",
                "X-Amz-Security-Token",
                "X-Amz-User-Agent"
              ],
              "allowCredentials": false
            },
            "request": {
              "schema": {
                "application/json": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "additionalProperties": false,
                  "definitions": {
                    "formGeneratorFields": {
                      "enum": [
                        "country",
                        "state",
                        "city",
                        "addressLine1",
                        "addressLine2",
                        "zipCode"
                      ]
                    }
                  },
                  "properties": {
                    "userSub": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "integer"
                    },
                    "country": {
                      "type": "string",
                      "description": "Country"
                    },
                    "state": {
                      "type": "string",
                      "description": "State"
                    },
                    "city": {
                      "type": "string",
                      "description": "City"
                    },
                    "addressLine1": {
                      "type": "string",
                      "description": "Address Line 1"
                    },
                    "addressLine2": {
                      "type": "string",
                      "description": "Address Line 2"
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "Zip Code"
                    },
                    "testbool": {
                      "type": "boolean",
                      "description": "Test bool"
                    }
                  },
                  "required": [
                    "updatedAt",
                    "country",
                    "state",
                    "city",
                    "addressLine1",
                    "zipCode"
                  ]
                }
              }
            }
          }
        }
      ],
      "environment": {
        "INTEGRATIONTYPE": "AWS_PROXY",
        "ENTITYTYPE": "DynamoDB",
        "NOTIFICATIONCONFIG": "{\"isFifo\":true,\"activeChannels\":[],\"categoryConfig\":[{\"title\":\"General\",\"notificationType\":\"OPT-OUT\"}]}",
        "HASHKEY": "userSub",
        "SORTKEY": "updatedAt"
      }
    },
    "dynamodbaddressdelete": {
      "handler": "address/dynamodb-handlers/lambda-handlers/dynamodb-handler-delete.handler",
      "events": [
        {
          "http": {
            "method": "DELETE",
            "path": "address",
            "integration": "AWS_PROXY",
            "authorizer": "aws_iam",
            "cors": {
              "origin": "*",
              "headers": [
                "Content-Type",
                "X-Amz-Date",
                "Authorization",
                "X-Api-Key",
                "X-Amz-Security-Token",
                "X-Amz-User-Agent"
              ],
              "allowCredentials": false
            },
            "request": {
              "parameters": {
                "querystrings": {
                  "updatedAt": true
                }
              }
            }
          }
        }
      ],
      "environment": {
        "INTEGRATIONTYPE": "AWS_PROXY",
        "ENTITYTYPE": "DynamoDB",
        "NOTIFICATIONCONFIG": "{\"isFifo\":true,\"activeChannels\":[],\"categoryConfig\":[{\"title\":\"General\",\"notificationType\":\"OPT-OUT\"}]}",
        "HASHKEY": "userSub",
        "SORTKEY": "updatedAt"
      }
    },
    "dynamodbaddressgetkey": {
      "handler": "address/dynamodb-handlers/lambda-handlers/dynamodb-handler-get-key.handler",
      "events": [
        {
          "http": {
            "method": "GET",
            "path": "address/{key}",
            "integration": "AWS_PROXY",
            "authorizer": "aws_iam",
            "cors": {
              "origin": "*",
              "headers": [
                "Content-Type",
                "X-Amz-Date",
                "Authorization",
                "X-Api-Key",
                "X-Amz-Security-Token",
                "X-Amz-User-Agent"
              ],
              "allowCredentials": false
            },
            "request": {
              "parameters": {
                "paths": {
                  "key": true
                },
                "querystrings": {
                  "updatedAt": false
                }
              }
            }
          }
        }
      ],
      "environment": {
        "INTEGRATIONTYPE": "AWS_PROXY",
        "ENTITYTYPE": "DynamoDB",
        "NOTIFICATIONCONFIG": "{\"isFifo\":true,\"activeChannels\":[],\"categoryConfig\":[{\"title\":\"General\",\"notificationType\":\"OPT-OUT\"}]}",
        "HASHKEY": "userSub",
        "SORTKEY": "updatedAt"
      }
    }
  },
  "resources": {
    "Resources": {
      "codepipelinetestdynamodbaddress": {
        "Type": "AWS::DynamoDB::Table",
        "Properties": {
          "TableName": "code-pipeline-test-dynamodb-address-${self:custom.currentStage}",
          "AttributeDefinitions": [
            {
              "AttributeName": "userSub",
              "AttributeType": "S"
            },
            {
              "AttributeName": "updatedAt",
              "AttributeType": "N"
            }
          ],
          "KeySchema": [
            {
              "AttributeName": "userSub",
              "KeyType": "HASH"
            },
            {
              "AttributeName": "updatedAt",
              "KeyType": "RANGE"
            }
          ],
          "BillingMode": "PAY_PER_REQUEST"
        }
      },
      "codepipelinetestlambdaapi400response": {
        "Type": "AWS::ApiGateway::GatewayResponse",
        "Properties": {
          "ResponseType": "DEFAULT_4XX",
          "RestApiId": {
            "Ref": "ApiGatewayRestApi"
          },
          "ResponseTemplates": {
            "application/json": "{\n        \"errorMessage\": \"$context.error.message\"\n    }"
          },
          "ResponseParameters": {
            "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
          }
        }
      },
      "codepipelinetestlambdaapi500response": {
        "Type": "AWS::ApiGateway::GatewayResponse",
        "Properties": {
          "ResponseType": "DEFAULT_5XX",
          "RestApiId": {
            "Ref": "ApiGatewayRestApi"
          },
          "ResponseTemplates": {
            "application/json": "{\n        \"errorMessage\": \"$context.error.message\"\n    }"
          },
          "ResponseParameters": {
            "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
          }
        }
      },
      "codepipelinetestlambdaapibadbodyresponse": {
        "Type": "AWS::ApiGateway::GatewayResponse",
        "Properties": {
          "ResponseType": "BAD_REQUEST_BODY",
          "RestApiId": {
            "Ref": "ApiGatewayRestApi"
          },
          "ResponseTemplates": {
            "application/json": "{\n        \"errorMessage\": \"$context.error.validationErrorString\"\n    }"
          },
          "ResponseParameters": {
            "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
          }
        }
      },
      "codepipelinetestfrontenddeploymentbucket": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "BucketName": "code-pipeline-test-frontenddeploymentbu-1650871920579-${self:custom.currentStage}",
          "AccessControl": "PublicRead",
          "WebsiteConfiguration": {
            "IndexDocument": "index.html",
            "ErrorDocument": "index.html"
          }
        }
      },
      "codepipelinetestfrontenddeploymentbucketpolicy": {
        "Type": "AWS::S3::BucketPolicy",
        "Properties": {
          "Bucket": {
            "Ref": "codepipelinetestfrontenddeploymentbucket"
          },
          "PolicyDocument": {
            "Id": "pd-code-pipeline-test-frontenddeploymentbu-1650871920579-${self:custom.currentStage}",
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "PublicReadForGetBucketObjects",
                "Effect": "Allow",
                "Action": ["s3:GetObject"],
                "Principal": "*",
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "codepipelinetestfrontenddeploymentbucket"
                        },
                        "/*"
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "codepipelinetestfrontendcloudfrontdistribution": {
        "Type": "AWS::CloudFront::Distribution",
        "Properties": {
          "DistributionConfig": {
            "DefaultCacheBehavior": {
              "Compress": true,
              "ForwardedValues": {
                "QueryString": false
              },
              "TargetOriginId": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "codepipelinetestfrontenddeploymentbucket"
                    },
                    ".s3.amazonaws.com"
                  ]
                ]
              },
              "ViewerProtocolPolicy": "redirect-to-https",
              "AllowedMethods": ["GET", "HEAD"]
            },
            "DefaultRootObject": "index.html",
            "Enabled": true,
            "HttpVersion": "http2",
            "Origins": [
              {
                "DomainName": {
                  "Fn::Select": [
                    2,
                    {
                      "Fn::Split": [
                        "/",
                        {
                          "Fn::GetAtt": [
                            "codepipelinetestfrontenddeploymentbucket",
                            "WebsiteURL"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "Id": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "codepipelinetestfrontenddeploymentbucket"
                      },
                      ".s3.amazonaws.com"
                    ]
                  ]
                },
                "CustomOriginConfig": {
                  "HTTPPort": "80",
                  "HTTPSPort": "443",
                  "OriginProtocolPolicy": "http-only"
                }
              }
            ],
            "PriceClass": "PriceClass_All",
            "ViewerCertificate": {
              "CloudFrontDefaultCertificate": true
            }
          }
        }
      },
      "codepipelinetestfrontendcloudfrontdistributionssmparameter": {
        "Type": "AWS::SSM::Parameter",
        "Properties": {
          "Type": "String",
          "Value": {
            "Ref": "codepipelinetestfrontendcloudfrontdistribution"
          },
          "Name": "code-pipeline-test-cloudfront-distributions-id-${self:custom.currentStage}"
        }
      },
      "codepipelinetestcognitoadminaccessrole": {
        "Type": "AWS::IAM::Role",
        "DependsOn": ["codepipelinetestuserpool"],
        "Properties": {
          "RoleName": "code-pipeline-test-cognito-admin-access-role-${self:custom.currentStage}",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "apigateway.amazonaws.com"
                },
                "Action": ["sts:AssumeRole"]
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "code-pipeline-test-cognito-admin-access-policy-${self:custom.currentStage}",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "cognito-idp:AdminGetUser",
                      "cognito-idp:AdminCreateUser",
                      "cognito-idp:AdminDeleteUser",
                      "cognito-idp:AdminDisableUser",
                      "cognito-idp:AdminEnableUser",
                      "cognito-idp:AdminRemoveUserFromGroup",
                      "cognito-idp:AdminListGroupsForUser",
                      "cognito-idp:AdminAddUserToGroup",
                      "cognito-idp:ListUsers",
                      "cognito-idp:ListGroups",
                      "cognito-idp:AdminUpdateUserAttributes",
                      "cognito-idp:AdminSetUserPassword"
                    ],
                    "Resource": [
                      {
                        "Fn::GetAtt": ["codepipelinetestuserpool", "Arn"]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      },
      "codepipelinetestdynamodbfullaccessrole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": "code-pipeline-test-dynamodb-fullaccessrole-${self:custom.currentStage}",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "apigateway.amazonaws.com"
                },
                "Action": ["sts:AssumeRole"]
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "code-pipeline-testdynamodbfullaccesspolicy",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:GetItem",
                      "dynamodb:PutItem",
                      "dynamodb:DeleteItem",
                      "dynamodb:UpdateItem",
                      "dynamodb:Query",
                      "dynamodb:Scan"
                    ],
                    "Resource": ["arn:aws:dynamodb:*:*:table/*"]
                  }
                ]
              }
            }
          ]
        }
      },
      "codepipelinetestuserpoolsmsrole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": "code-pipeline-test-cognito-sms-role-${self:custom.currentStage}",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": ["cognito-idp.amazonaws.com"]
                },
                "Action": ["sts:AssumeRole"],
                "Condition": {
                  "StringEquals": {
                    "sts:ExternalId": "code-pipeline-test-userpool-smsrole-id-${self:custom.currentStage}"
                  }
                }
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "code-pipeline-test-cognito-sms-policy-${self:custom.currentStage}",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": ["sns:publish"],
                    "Resource": ["*"]
                  }
                ]
              }
            }
          ]
        }
      },
      "codepipelinetestuserpool": {
        "Type": "AWS::Cognito::UserPool",
        "DependsOn": ["codepipelinetestuserpoolsmsrole"],
        "Properties": {
          "AccountRecoverySetting": {
            "RecoveryMechanisms": [
              {
                "Name": "verified_email",
                "Priority": 1
              },
              {
                "Name": "verified_phone_number",
                "Priority": 2
              }
            ]
          },
          "Schema": [
            {
              "AttributeDataType": "String",
              "Mutable": false,
              "Name": "email",
              "Required": true
            },
            {
              "AttributeDataType": "String",
              "Mutable": false,
              "Name": "phone_number",
              "Required": false
            }
          ],
          "UsernameAttributes": ["email"],
          "UsernameConfiguration": {
            "CaseSensitive": false
          },
          "AutoVerifiedAttributes": ["email", "phone_number"],
          "EmailVerificationMessage": "Your verification code is {####}",
          "EmailVerificationSubject": "Your verification code",
          "SmsAuthenticationMessage": "Your authentication code is {####}",
          "SmsVerificationMessage": "Your verification code is {####}",
          "MfaConfiguration": "OPTIONAL",
          "Policies": {
            "PasswordPolicy": {
              "MinimumLength": 8,
              "RequireLowercase": false,
              "RequireNumbers": false,
              "RequireSymbols": false,
              "RequireUppercase": false,
              "TemporaryPasswordValidityDays": 365
            }
          },
          "UserPoolName": "code-pipeline-test-userpool-${self:custom.currentStage}",
          "SmsConfiguration": {
            "ExternalId": "code-pipeline-test-userpool-smsrole-id-${self:custom.currentStage}",
            "SnsCallerArn": {
              "Fn::GetAtt": ["codepipelinetestuserpoolsmsrole", "Arn"]
            }
          }
        }
      },
      "codepipelinetestidentitypool": {
        "Type": "AWS::Cognito::IdentityPool",
        "Properties": {
          "IdentityPoolName": "codepipelinetestidentitypool${self:custom.currentStage}",
          "AllowUnauthenticatedIdentities": true,
          "CognitoIdentityProviders": [
            {
              "ClientId": {
                "Ref": "codepipelinetestuserpoolclient"
              },
              "ProviderName": {
                "Fn::GetAtt": ["codepipelinetestuserpool", "ProviderName"]
              }
            }
          ]
        }
      },
      "codepipelinetestuserpoolclient": {
        "Type": "AWS::Cognito::UserPoolClient",
        "Properties": {
          "GenerateSecret": false,
          "ReadAttributes": [
            "email",
            "email_verified",
            "phone_number",
            "phone_number_verified"
          ],
          "WriteAttributes": ["email", "phone_number"],
          "RefreshTokenValidity": 365,
          "ClientName": "code-pipeline-test-userpoolclient-${self:custom.currentStage}",
          "UserPoolId": {
            "Ref": "codepipelinetestuserpool"
          }
        }
      },
      "codepipelinetestgroupusersrole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": "code-pipeline-test-group-users-role-${self:custom.currentStage}",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "cognito-identity.amazonaws.com"
                },
                "Action": ["sts:AssumeRoleWithWebIdentity"],
                "Condition": {
                  "StringEquals": {
                    "cognito-identity.amazonaws.com:aud": {
                      "Ref": "codepipelinetestidentitypool"
                    }
                  },
                  "ForAnyValue:StringLike": {
                    "cognito-identity.amazonaws.com:amr": "authenticated"
                  }
                }
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "code-pipeline-test-group-users-role-${self:custom.currentStage}-policy",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": ["execute-api:Invoke"],
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/${self:provider.stage}/*/",
                            "address"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/${self:provider.stage}/*/",
                            "address",
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/GET/user"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/POST/user"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/DELETE/user/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/GET/user/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/PATCH/user/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/PATCH/user/*/disable"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/PATCH/user/*/enable"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/PATCH/user/*/renewpass"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/DELETE/user/*/group"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/GET/user/*/group"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/POST/user/*/group"
                          ]
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        "DependsOn": ["ApiGatewayRestApi"]
      },
      "codepipelinetestuserpoolgroupusers": {
        "Type": "AWS::Cognito::UserPoolGroup",
        "Properties": {
          "GroupName": "Users",
          "Precedence": 1,
          "UserPoolId": {
            "Ref": "codepipelinetestuserpool"
          },
          "RoleArn": {
            "Fn::GetAtt": ["codepipelinetestgroupusersrole", "Arn"]
          }
        }
      },
      "codepipelinetestauthrole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": "code-pipeline-test-auth-role-${self:custom.currentStage}",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "cognito-identity.amazonaws.com"
                },
                "Action": ["sts:AssumeRoleWithWebIdentity"],
                "Condition": {
                  "StringEquals": {
                    "cognito-identity.amazonaws.com:aud": {
                      "Ref": "codepipelinetestidentitypool"
                    }
                  },
                  "ForAnyValue:StringLike": {
                    "cognito-identity.amazonaws.com:amr": "authenticated"
                  }
                }
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "code-pipeline-test-auth-role-${self:custom.currentStage}-policy",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": ["execute-api:Invoke"],
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/${self:provider.stage}/*/",
                            "address"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/${self:provider.stage}/*/",
                            "address",
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/GET/user"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/POST/user"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/DELETE/user/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/GET/user/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/PATCH/user/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/PATCH/user/*/disable"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/PATCH/user/*/enable"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/PATCH/user/*/renewpass"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/DELETE/user/*/group"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/GET/user/*/group"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "codepipelinetestcognitoadminapi"
                            },
                            "/${self:provider.stage}/POST/user/*/group"
                          ]
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        "DependsOn": ["ApiGatewayRestApi"]
      },
      "codepipelinetestunauthrole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": "code-pipeline-test-unauth-role-${self:custom.currentStage}",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "cognito-identity.amazonaws.com"
                },
                "Action": ["sts:AssumeRoleWithWebIdentity"],
                "Condition": {
                  "StringEquals": {
                    "cognito-identity.amazonaws.com:aud": {
                      "Ref": "codepipelinetestidentitypool"
                    }
                  },
                  "ForAnyValue:StringLike": {
                    "cognito-identity.amazonaws.com:amr": "unauthenticated"
                  }
                }
              }
            ]
          },
          "Path": "/"
        },
        "DependsOn": ["ApiGatewayRestApi"]
      },
      "codepipelinetestidentitypoolroleattachment": {
        "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
        "Properties": {
          "IdentityPoolId": {
            "Ref": "codepipelinetestidentitypool"
          },
          "Roles": {
            "unauthenticated": {
              "Fn::GetAtt": ["codepipelinetestunauthrole", "Arn"]
            },
            "authenticated": {
              "Fn::GetAtt": ["codepipelinetestauthrole", "Arn"]
            }
          },
          "RoleMappings": {
            "cognitoProvider": {
              "AmbiguousRoleResolution": "AuthenticatedRole",
              "Type": "Token",
              "IdentityProvider": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "cognito-idp.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".amazonaws.com/"
                        ]
                      ]
                    },
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    ":",
                    {
                      "Ref": "codepipelinetestuserpoolclient"
                    }
                  ]
                ]
              }
            }
          }
        }
      },
      "codepipelinetestcognitoadminapi": {
        "Type": "AWS::ApiGateway::RestApi",
        "DependsOn": [
          "codepipelinetestcognitoadminaccessrole",
          "codepipelinetestuserpool"
        ],
        "Properties": {
          "Name": "code-pipeline-test-cognito-admin-api-${self:custom.currentStage}",
          "EndpointConfiguration": {
            "Types": ["EDGE"]
          }
        }
      },
      "codepipelinetestcognitoadminapiuserresource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ParentId": {
            "Fn::GetAtt": ["codepipelinetestcognitoadminapi", "RootResourceId"]
          },
          "PathPart": "user"
        }
      },
      "codepipelinetestcognitoadminapiusersubresource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ParentId": {
            "Ref": "codepipelinetestcognitoadminapiuserresource"
          },
          "PathPart": "{sub}"
        }
      },
      "codepipelinetestcognitoadminapiusersubdisableresource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ParentId": {
            "Ref": "codepipelinetestcognitoadminapiusersubresource"
          },
          "PathPart": "disable"
        }
      },
      "codepipelinetestcognitoadminapiusersubenableresource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ParentId": {
            "Ref": "codepipelinetestcognitoadminapiusersubresource"
          },
          "PathPart": "enable"
        }
      },
      "codepipelinetestcognitoadminapiusersubgroupresource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ParentId": {
            "Ref": "codepipelinetestcognitoadminapiusersubresource"
          },
          "PathPart": "group"
        }
      },
      "codepipelinetestcognitoadminapiusersubrenewpassresource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ParentId": {
            "Ref": "codepipelinetestcognitoadminapiusersubresource"
          },
          "PathPart": "renewpass"
        }
      },
      "codepipelinetestcognitoadminapiuseroptionmethod": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "NONE",
          "HttpMethod": "OPTIONS",
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Headers": true,
                "method.response.header.Access-Control-Allow-Methods": true
              }
            }
          ],
          "Integration": {
            "Type": "MOCK",
            "RequestTemplates": {
              "application/json": "{statusCode: 200}"
            },
            "ContentHandling": "CONVERT_TO_TEXT",
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                  "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'"
                },
                "ResponseTemplates": {
                  "application/json": ""
                }
              }
            ]
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiuserresource"
          }
        }
      },
      "codepipelinetestcognitoadminapiusersuboptionmethod": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "NONE",
          "HttpMethod": "OPTIONS",
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Headers": true,
                "method.response.header.Access-Control-Allow-Methods": true
              }
            }
          ],
          "Integration": {
            "Type": "MOCK",
            "RequestTemplates": {
              "application/json": "{statusCode: 200}"
            },
            "ContentHandling": "CONVERT_TO_TEXT",
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                  "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,DELETE,PATCH'"
                },
                "ResponseTemplates": {
                  "application/json": ""
                }
              }
            ]
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubresource"
          }
        }
      },
      "codepipelinetestcognitoadminapiusersubdisableoptionmethod": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "NONE",
          "HttpMethod": "OPTIONS",
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Headers": true,
                "method.response.header.Access-Control-Allow-Methods": true
              }
            }
          ],
          "Integration": {
            "Type": "MOCK",
            "RequestTemplates": {
              "application/json": "{statusCode: 200}"
            },
            "ContentHandling": "CONVERT_TO_TEXT",
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                  "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                },
                "ResponseTemplates": {
                  "application/json": ""
                }
              }
            ]
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubdisableresource"
          }
        }
      },
      "codepipelinetestcognitoadminapiusersubenableoptionmethod": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "NONE",
          "HttpMethod": "OPTIONS",
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Headers": true,
                "method.response.header.Access-Control-Allow-Methods": true
              }
            }
          ],
          "Integration": {
            "Type": "MOCK",
            "RequestTemplates": {
              "application/json": "{statusCode: 200}"
            },
            "ContentHandling": "CONVERT_TO_TEXT",
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                  "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                },
                "ResponseTemplates": {
                  "application/json": ""
                }
              }
            ]
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubenableresource"
          }
        }
      },
      "codepipelinetestcognitoadminapiusersubgroupoptionmethod": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "NONE",
          "HttpMethod": "OPTIONS",
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Headers": true,
                "method.response.header.Access-Control-Allow-Methods": true
              }
            }
          ],
          "Integration": {
            "Type": "MOCK",
            "RequestTemplates": {
              "application/json": "{statusCode: 200}"
            },
            "ContentHandling": "CONVERT_TO_TEXT",
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                  "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,GET,POST'"
                },
                "ResponseTemplates": {
                  "application/json": ""
                }
              }
            ]
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubgroupresource"
          }
        }
      },
      "codepipelinetestcognitoadminapiusersubrenewpassoptionmethod": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "NONE",
          "HttpMethod": "OPTIONS",
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Headers": true,
                "method.response.header.Access-Control-Allow-Methods": true
              }
            }
          ],
          "Integration": {
            "Type": "MOCK",
            "RequestTemplates": {
              "application/json": "{statusCode: 200}"
            },
            "ContentHandling": "CONVERT_TO_TEXT",
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                  "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                },
                "ResponseTemplates": {
                  "application/json": ""
                }
              }
            ]
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubrenewpassresource"
          }
        }
      },
      "codepipelinetestcognitoadminapimethoduserget": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "GET",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiuserresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/ListUsers"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "#set($inputRoot = $input.params().querystring)\n            {\n                #if ( $inputRoot.AttributesToGet.toString() != \"\") \n                    \"AttributesToGet\": $inputRoot.AttributesToGet,\n                #end\n                #if ( $inputRoot.limit.toString() != \"\") \n                    \"Limit\": $inputRoot.limit.split(';')[1],\n                #else\n                    \"Limit\": 50,\n                #end\n                #if ( $inputRoot.LastEvaluatedKey.toString() != \"\") \n                    \"PaginationToken\": \"$util.parseJson(\"$inputRoot.LastEvaluatedKey.split(';')[1]\").PaginationToken\",\n                #end\n                #if ( $inputRoot.Filter.toString() != \"\") \n                    \"Filter\": \"$inputRoot.Filter\",\n                #end\n                \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n            }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "#set($inputRoot = $input.path('$'))\n      {\n          #if ( $inputRoot.PaginationToken.toString() != \"\") \n              \"LastEvaluatedKey\":{\"PaginationToken\": \"$inputRoot.PaginationToken\"},\n          #end\n          \"Items\": $inputRoot.Users\n      }"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapimethoduserpost": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "POST",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiuserresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/AdminCreateUser"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "#set($inputRoot = $input.path('$'))\n            {\n                #if ( $inputRoot.DesiredDeliveryMediums.toString() != \"\") \n                    \"DesiredDeliveryMediums\": $inputRoot.DesiredDeliveryMediums,\n                #end\n                #if ( $inputRoot.ForceAliasCreation.toString() != \"\") \n                    \"ForceAliasCreation\": $inputRoot.ForceAliasCreation,\n                #end\n                #if ( $inputRoot.MessageAction.toString() != \"\") \n                    \"MessageAction\": \"$inputRoot.MessageAction\",\n                #end\n                #if ( $inputRoot.ValidationData.toString() != \"\") \n                    \"ValidationData\": $inputRoot.ValidationData,\n                #end\n                \"TemporaryPassword\": \"$inputRoot.TemporaryPassword\",\n                \"UserAttributes\": $inputRoot.UserAttributes,\n                \"Username\": \"$inputRoot.Username\",\n                \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n            }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapimethodusersubdelete": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "DELETE",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/AdminDeleteUser"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "{\n              #if (\"$input.params('sub').split(';')[1]\" != \"$context.identity.cognitoAuthenticationProvider.split(':CognitoSignIn:')[1]\") \n                  \"Username\": \"$input.params('sub').split(';')[1]\",\n                  \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #else\n              \"Username\": \"fd5984ca-5e4e-410f-ac5d-e38307e2eaf5\",\n              \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #end\n              \n            }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "#set($inputRoot = $input.path('$'))\n      {\n        \"Attributes\": {\n          \"Name\": \"sub\",\n          \"Value\": \"$input.params('sub').split(';')[1]\"\n        }\n      }"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapimethodusersubget": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "GET",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/AdminGetUser"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "{\n              \"Username\": \"$input.params('sub').split(';')[1]\",\n              \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n            }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapimethodusersubpatch": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "PATCH",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/AdminUpdateUserAttributes"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "#set($inputRoot = $input.path('$'))\n            {\n                \"UserAttributes\": $inputRoot.UserAttributes,\n                \"Username\": \"$input.params('sub').split(';')[1]\",\n                \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n            }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapimethodusersubdisablepatch": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "PATCH",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubdisableresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/AdminDisableUser"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "{\n              #if (\"$input.params('sub').split(';')[1]\" != \"$context.identity.cognitoAuthenticationProvider.split(':CognitoSignIn:')[1]\") \n                  \"Username\": \"$input.params('sub').split(';')[1]\",\n                  \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #else\n              \"Username\": \"fd5984ca-5e4e-410f-ac5d-e38307e2eaf5\",\n              \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #end\n              \n            }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapimethodusersubenablepatch": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "PATCH",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubenableresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/AdminEnableUser"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "{\n              #if (\"$input.params('sub').split(';')[1]\" != \"$context.identity.cognitoAuthenticationProvider.split(':CognitoSignIn:')[1]\") \n                  \"Username\": \"$input.params('sub').split(';')[1]\",\n                  \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #else\n              \"Username\": \"fd5984ca-5e4e-410f-ac5d-e38307e2eaf5\",\n              \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #end\n              \n            }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapimethodusersubrenewpasspatch": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "PATCH",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubrenewpassresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/AdminSetUserPassword"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "{\n              \"Password\": \"$input.path('$.Password')\",\n              \"Permanent\": false,\n              #if (\"$input.params('sub').split(';')[1]\" != \"$context.identity.cognitoAuthenticationProvider.split(':CognitoSignIn:')[1]\") \n                  \"Username\": \"$input.params('sub').split(';')[1]\",\n                  \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #else\n              \"Username\": \"fd5984ca-5e4e-410f-ac5d-e38307e2eaf5\",\n              \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #end\n        }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapimethodusersubgroupdelete": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "DELETE",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubgroupresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/AdminRemoveUserFromGroup"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "{\n              \"GroupName\": \"$input.path('$.GroupName')\",\n              #if (\"$input.params('sub').split(';')[1]\" != \"$context.identity.cognitoAuthenticationProvider.split(':CognitoSignIn:')[1]\") \n                  \"Username\": \"$input.params('sub').split(';')[1]\",\n                  \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #else\n              \"Username\": \"fd5984ca-5e4e-410f-ac5d-e38307e2eaf5\",\n              \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #end\n        }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "#set($inputRoot = $input.path('$'))\n      {\n        \"Attributes\": {\n          \"Name\": \"sub\",\n          \"Value\": \"$input.params('sub').split(';')[1]\"\n        }\n      }"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapimethodusersubgrouppost": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "POST",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubgroupresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/AdminAddUserToGroup"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "{\n              \"GroupName\": \"$input.path('$.GroupName')\",\n              #if (\"$input.params('sub').split(';')[1]\" != \"$context.identity.cognitoAuthenticationProvider.split(':CognitoSignIn:')[1]\") \n                  \"Username\": \"$input.params('sub').split(';')[1]\",\n                  \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #else\n              \"Username\": \"fd5984ca-5e4e-410f-ac5d-e38307e2eaf5\",\n              \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n              #end\n        }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapimethodusersubgroupget": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "AuthorizationType": "AWS_IAM",
          "HttpMethod": "GET",
          "ResourceId": {
            "Ref": "codepipelinetestcognitoadminapiusersubgroupresource"
          },
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS",
            "PassthroughBehavior": "WHEN_NO_TEMPLATES",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":cognito-idp:action/AdminListGroupsForUser"
                ]
              ]
            },
            "RequestTemplates": {
              "application/json": {
                "Fn::Join": [
                  "",
                  [
                    "{\n              \"Username\": \"$input.params('sub').split(';')[1]\",\n              \"UserPoolId\": \"",
                    {
                      "Ref": "codepipelinetestuserpool"
                    },
                    "\"\n        }"
                  ]
                ]
              }
            },
            "Credentials": {
              "Fn::GetAtt": ["codepipelinetestcognitoadminaccessrole", "Arn"]
            },
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "SelectionPattern": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                }
              },
              {
                "StatusCode": 400,
                "SelectionPattern": "^[400].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              },
              {
                "StatusCode": 500,
                "SelectionPattern": "^[500].*",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Credentials": "'true'"
                },
                "ResponseTemplates": {
                  "application/json": "{\"errorMessage\": \"$input.path(\"$.message\")\"}"
                }
              }
            ]
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            },
            {
              "StatusCode": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Credentials": true
              }
            }
          ]
        }
      },
      "codepipelinetestcognitoadminapideployment572522": {
        "DependsOn": [
          "codepipelinetestcognitoadminapi",
          "codepipelinetestcognitoadminapiuseroptionmethod",
          "codepipelinetestcognitoadminapiusersuboptionmethod",
          "codepipelinetestcognitoadminapiusersubdisableoptionmethod",
          "codepipelinetestcognitoadminapiusersubenableoptionmethod",
          "codepipelinetestcognitoadminapiusersubgroupoptionmethod",
          "codepipelinetestcognitoadminapiusersubrenewpassoptionmethod",
          "codepipelinetestcognitoadminapimethoduserget",
          "codepipelinetestcognitoadminapimethoduserpost",
          "codepipelinetestcognitoadminapimethodusersubdelete",
          "codepipelinetestcognitoadminapimethodusersubget",
          "codepipelinetestcognitoadminapimethodusersubpatch",
          "codepipelinetestcognitoadminapimethodusersubdisablepatch",
          "codepipelinetestcognitoadminapimethodusersubenablepatch",
          "codepipelinetestcognitoadminapimethodusersubrenewpasspatch",
          "codepipelinetestcognitoadminapimethodusersubgroupdelete",
          "codepipelinetestcognitoadminapimethodusersubgrouppost",
          "codepipelinetestcognitoadminapimethodusersubgroupget"
        ],
        "Type": "AWS::ApiGateway::Deployment",
        "Properties": {
          "StageName": "${self:custom.currentStage}",
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          }
        }
      },
      "codepipelinetestcognitoadminapi400response": {
        "Type": "AWS::ApiGateway::GatewayResponse",
        "Properties": {
          "ResponseType": "DEFAULT_4XX",
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ResponseTemplates": {
            "application/json": "{\n        \"errorMessage\": \"$context.error.message\"\n    }"
          },
          "ResponseParameters": {
            "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
          }
        }
      },
      "codepipelinetestcognitoadminapi500response": {
        "Type": "AWS::ApiGateway::GatewayResponse",
        "Properties": {
          "ResponseType": "DEFAULT_5XX",
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ResponseTemplates": {
            "application/json": "{\n        \"errorMessage\": \"$context.error.message\"\n    }"
          },
          "ResponseParameters": {
            "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
          }
        }
      },
      "codepipelinetestcognitoadminapibadbodyresponse": {
        "Type": "AWS::ApiGateway::GatewayResponse",
        "Properties": {
          "ResponseType": "BAD_REQUEST_BODY",
          "RestApiId": {
            "Ref": "codepipelinetestcognitoadminapi"
          },
          "ResponseTemplates": {
            "application/json": "{\n        \"errorMessage\": \"$context.error.validationErrorString\"\n    }"
          },
          "ResponseParameters": {
            "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
          }
        }
      }
    },
    "Outputs": {
      "codepipelinetestdynamodbaddressarn": {
        "Export": {
          "Name": "codepipelinetestdynamodbaddressarn-${self:custom.currentStage}"
        },
        "Value": {
          "Fn::GetAtt": ["codepipelinetestdynamodbaddress", "Arn"]
        }
      }
    }
  }
}
